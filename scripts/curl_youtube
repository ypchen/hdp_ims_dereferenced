#!/bin/sh

# It's just a reference implementation.
# You need to modify it according to your local environment.

progRM="/bin/rm"
progTR="/usr/bin/tr"
progCAT="/bin/cat"
progCUT="/usr/bin/cut"
progGREP="/bin/grep"
progECHO="/bin/echo"
progNICE="/bin/nice"
progCURL="/opt/bin/curl"

fileDataURL="/tmp/yv_url.data"
fileStep="/tmp/yv_url_redir.step"
fileExit="/tmp/yv_url_redir.exit"
fileCallback="/tmp/yv_url_redir.callback"
fileExtraOpt="/tmp/yv_url_redir.extraOpt"

filePid="/tmp/${0}.pid"
filePrefix="/tmp/${0}.$$"
fileM3U8="${filePrefix}.m3u8"
fileCurrSegNo="/tmp/${0}.currSegNo"
#fileCurrSegNo="${filePrefix}.currSegNo"
fileTimestamp="${filePrefix}.timestamp"
fileStdErr="${filePrefix}.stderr"

valueNICE="4"
optCURL="-s -k -N --retry 5 --retry-delay 1 --retry-max-time 15"

got_signal() {
	${progRM} -f ${filePrefix}.*
	exit 0
}
trap "got_signal" PIPE QUIT TERM

if [ -s "${fileStep}" ]; then
	currStep=`${progCAT} "${fileStep}" 2>/dev/null`
	if [ "${currStep}" == "1" ]; then

		${progECHO} "2" > "${fileStep}"

		# Redirect to the local agent to obtain the request header
		callback=`${progCAT} "${fileCallback}" 2>/dev/null`
		${progECHO} "HTTP/1.1 302 Found"
		${progECHO} "Location: ${callback}"
		${progECHO} ""

		exit 0

	elif [ "${currStep}" == "3" ]; then

		${progECHO} "1" > "${fileStep}"

		extraOpt=`${progCAT} "${fileExtraOpt}" 2>/dev/null`
		dataURL=`${progCAT} "${fileDataURL}" 2>/dev/null`

		m3u8Test=`${progECHO} "${dataURL}" | ${progGREP} -i "m3u8"`
		if [ $? -eq 0 ]; then
			date +%s > "${fileTimestamp}"
			# Handle m3u8 (YouTube HTTP Live Stream and/or others)
			extraOpt=""
			segSN="0"
			while true; do
				${progCURL} -o "${fileM3U8}" ${optCURL} ${extraOpt} --stderr "${fileStdErr}" "${dataURL}"
				while read line; do
					line=`${progECHO} "${line}" | ${progTR} -d '\r\n'`
					lineTag=`${progECHO} "${line}" | ${progCUT} -d ':' -f 1`
					if [ "${lineTag}" == "http" -o "${lineTag}" == "https" ]; then
						if [ "${segSN}" == "0" ]; then
							${progECHO} "HTTP/1.1 200 OK"
							${progECHO} "Content-Type: application/octet-stream"
							${progECHO} "Accept-Ranges: bytes"
							${progECHO} "Content-Range: bytes 0-99/*"
							${progECHO} "Connection: close"
							${progECHO} ""
						fi

						segSN=$(($segSN+1))
						${progECHO} "${segSN}" > "${fileCurrSegNo}"
#						${progECHO} "${segSN} -- [$lineTag] ${line}" > "${fileCurrSegNo}"
						${progNICE} -n ${valueNICE} ${progCURL} -o - ${optCURL} ${extraOpt} --stderr "${fileStdErr}" "${line}"

						if [ -s "${fileExit}" ]; then
							${progRM} -f ${filePrefix}.*
							exit `${progCAT} "${fileExit}" 2>/dev/null`
						elif [ -s "${filePid}" ]; then
							pidInFile=`${progCAT} "${filePid}" 2>/dev/null`
							if [ "${pidInFile}" != "$$" ]; then
								myTS=`${progCAT} "${fileTimestamp}" 2>/dev/null`
								otherTS=`${progCAT} "/tmp/${0}.${pidInFile}.timestamp" 2>/dev/null`
								if [ "${myTS}" -le "${otherTS}" ]; then
									${progRM} -f ${filePrefix}.*
									exit 0
								fi
							fi
						fi
						${progECHO} $$ > "${filePid}"
					elif [ "${lineTag}" == "#EXT-X-ENDLIST" ]; then
						exit 0
					fi
				done < "${fileM3U8}"
			done
		else
			filePrefix="/tmp/${0}"
			fileStdErr="${filePrefix}.stderr"

			# Handle 302 redirect
			headLOC=`${progCURL} -I ${optCURL} ${extraOpt} --stderr "${fileStdErr}" "${dataURL}" | ${progGREP} "Location:"`
			while [ $? -eq 0 ]
			do
				dataURL=`${progECHO} "${headLOC}" | ${progCUT} -d " " -f 2`
				headLOC=`${progCURL} -I ${optCURL} ${extraOpt} --stderr "${fileStdErr}" "${dataURL}" | ${progGREP} "Location:"`
			done

			exec ${progNICE} -n ${valueNICE} ${progCURL} -D - -o - ${optCURL} ${extraOpt} --stderr "${fileStdErr}" "${dataURL}"
		fi
	fi
fi
